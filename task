{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled0.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyP1ELlLmPkZOQ15sRCBb582",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/tanya17061997/deeep/blob/main/task\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "QceqNKCiGwL_"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "root_dir = '/content/drive/MyDrive/Equity Data (1 Jan 2020).csv'"
      ],
      "metadata": {
        "id": "6QGHWrmKOLiM"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data=pd.read_csv('/content/drive/MyDrive/Equity Data (1 Jan 2020).csv')"
      ],
      "metadata": {
        "id": "dazoNN02PW4E"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 444
        },
        "id": "woCBKbr9PsPI",
        "outputId": "60e974ea-73de-400a-d417-ea83cc7982a0"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        DATE1      SYMBOL   PREV_CLOSE   OPEN_PRICE   HIGH_PRICE   LOW_PRICE  \\\n",
              "0  11-02-2022  NETFLTGILT        22.40        22.02        22.48       22.02   \n",
              "1  11-02-2022  NETFMID150       116.02       119.50       119.50      113.61   \n",
              "2  11-02-2022  NETFNIF100       183.49       178.50       184.98      178.50   \n",
              "3  11-02-2022  NETFDIVOPP        45.63        46.25        46.25       45.07   \n",
              "4  11-02-2022  NETFGILT5Y        49.66        49.66        49.82       49.47   \n",
              "\n",
              "    LAST_PRICE   CLOSE_PRICE   AVG_PRICE   TTL_TRD_QNTY   TURNOVER_LACS  \\\n",
              "0        22.25         22.27       22.25          16697            3.72   \n",
              "1       114.10        113.95      114.68         224822          257.82   \n",
              "2       182.05        182.22      182.07           2354            4.29   \n",
              "3        45.33         45.09       45.40           1239            0.56   \n",
              "4        49.82         49.79       49.72          82821           41.18   \n",
              "\n",
              "    NO_OF_TRADES   DELIV_QTY   DELIV_PER  \n",
              "0             83     12968.0       77.67  \n",
              "1           1780    200777.0       89.30  \n",
              "2            135      2140.0       90.91  \n",
              "3             86      1122.0       90.56  \n",
              "4            322     74512.0       89.97  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-aefa5fac-3114-4bd4-b19d-a6ef7127e73c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>DATE1</th>\n",
              "      <th>SYMBOL</th>\n",
              "      <th>PREV_CLOSE</th>\n",
              "      <th>OPEN_PRICE</th>\n",
              "      <th>HIGH_PRICE</th>\n",
              "      <th>LOW_PRICE</th>\n",
              "      <th>LAST_PRICE</th>\n",
              "      <th>CLOSE_PRICE</th>\n",
              "      <th>AVG_PRICE</th>\n",
              "      <th>TTL_TRD_QNTY</th>\n",
              "      <th>TURNOVER_LACS</th>\n",
              "      <th>NO_OF_TRADES</th>\n",
              "      <th>DELIV_QTY</th>\n",
              "      <th>DELIV_PER</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>11-02-2022</td>\n",
              "      <td>NETFLTGILT</td>\n",
              "      <td>22.40</td>\n",
              "      <td>22.02</td>\n",
              "      <td>22.48</td>\n",
              "      <td>22.02</td>\n",
              "      <td>22.25</td>\n",
              "      <td>22.27</td>\n",
              "      <td>22.25</td>\n",
              "      <td>16697</td>\n",
              "      <td>3.72</td>\n",
              "      <td>83</td>\n",
              "      <td>12968.0</td>\n",
              "      <td>77.67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>11-02-2022</td>\n",
              "      <td>NETFMID150</td>\n",
              "      <td>116.02</td>\n",
              "      <td>119.50</td>\n",
              "      <td>119.50</td>\n",
              "      <td>113.61</td>\n",
              "      <td>114.10</td>\n",
              "      <td>113.95</td>\n",
              "      <td>114.68</td>\n",
              "      <td>224822</td>\n",
              "      <td>257.82</td>\n",
              "      <td>1780</td>\n",
              "      <td>200777.0</td>\n",
              "      <td>89.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>11-02-2022</td>\n",
              "      <td>NETFNIF100</td>\n",
              "      <td>183.49</td>\n",
              "      <td>178.50</td>\n",
              "      <td>184.98</td>\n",
              "      <td>178.50</td>\n",
              "      <td>182.05</td>\n",
              "      <td>182.22</td>\n",
              "      <td>182.07</td>\n",
              "      <td>2354</td>\n",
              "      <td>4.29</td>\n",
              "      <td>135</td>\n",
              "      <td>2140.0</td>\n",
              "      <td>90.91</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>11-02-2022</td>\n",
              "      <td>NETFDIVOPP</td>\n",
              "      <td>45.63</td>\n",
              "      <td>46.25</td>\n",
              "      <td>46.25</td>\n",
              "      <td>45.07</td>\n",
              "      <td>45.33</td>\n",
              "      <td>45.09</td>\n",
              "      <td>45.40</td>\n",
              "      <td>1239</td>\n",
              "      <td>0.56</td>\n",
              "      <td>86</td>\n",
              "      <td>1122.0</td>\n",
              "      <td>90.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>11-02-2022</td>\n",
              "      <td>NETFGILT5Y</td>\n",
              "      <td>49.66</td>\n",
              "      <td>49.66</td>\n",
              "      <td>49.82</td>\n",
              "      <td>49.47</td>\n",
              "      <td>49.82</td>\n",
              "      <td>49.79</td>\n",
              "      <td>49.72</td>\n",
              "      <td>82821</td>\n",
              "      <td>41.18</td>\n",
              "      <td>322</td>\n",
              "      <td>74512.0</td>\n",
              "      <td>89.97</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aefa5fac-3114-4bd4-b19d-a6ef7127e73c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-aefa5fac-3114-4bd4-b19d-a6ef7127e73c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-aefa5fac-3114-4bd4-b19d-a6ef7127e73c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 444
        },
        "id": "mpsZhsViPyJY",
        "outputId": "71cf2d17-22d7-4ef2-dd1c-e2e15b9b0a73"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             DATE1      SYMBOL   PREV_CLOSE   OPEN_PRICE   HIGH_PRICE  \\\n",
              "809334  01-01-2020  ORTINLABSS         9.90        10.15        10.15   \n",
              "809335  01-01-2020  ORISSAMINE      1281.50      1270.00      1288.00   \n",
              "809336  01-01-2020   OSWALAGRO         4.95         5.15         5.40   \n",
              "809337  01-01-2020     PAISALO       433.00       429.95       438.00   \n",
              "809338  01-01-2020     PAGEIND     23393.10     23350.00     23799.00   \n",
              "\n",
              "         LOW_PRICE   LAST_PRICE   CLOSE_PRICE   AVG_PRICE   TTL_TRD_QNTY  \\\n",
              "809334        9.80         9.85          9.80        9.84           5041   \n",
              "809335     1259.35      1264.00       1265.60     1268.53           8230   \n",
              "809336        5.00         5.20          5.30        5.18          27820   \n",
              "809337      427.45       429.95        428.85      432.68          37838   \n",
              "809338    23241.10     23600.00      23602.15    23601.26          16716   \n",
              "\n",
              "         TURNOVER_LACS   NO_OF_TRADES   DELIV_QTY   DELIV_PER  \n",
              "809334            0.50             26      4283.0       84.96  \n",
              "809335          104.40            626      4091.0       49.71  \n",
              "809336            1.44            143     17849.0       64.16  \n",
              "809337          163.72            505      8873.0       23.45  \n",
              "809338         3945.19           6464      2964.0       17.73  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-633beeb2-90cd-4d86-a9b6-8dbd97ce6de3\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>DATE1</th>\n",
              "      <th>SYMBOL</th>\n",
              "      <th>PREV_CLOSE</th>\n",
              "      <th>OPEN_PRICE</th>\n",
              "      <th>HIGH_PRICE</th>\n",
              "      <th>LOW_PRICE</th>\n",
              "      <th>LAST_PRICE</th>\n",
              "      <th>CLOSE_PRICE</th>\n",
              "      <th>AVG_PRICE</th>\n",
              "      <th>TTL_TRD_QNTY</th>\n",
              "      <th>TURNOVER_LACS</th>\n",
              "      <th>NO_OF_TRADES</th>\n",
              "      <th>DELIV_QTY</th>\n",
              "      <th>DELIV_PER</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>809334</th>\n",
              "      <td>01-01-2020</td>\n",
              "      <td>ORTINLABSS</td>\n",
              "      <td>9.90</td>\n",
              "      <td>10.15</td>\n",
              "      <td>10.15</td>\n",
              "      <td>9.80</td>\n",
              "      <td>9.85</td>\n",
              "      <td>9.80</td>\n",
              "      <td>9.84</td>\n",
              "      <td>5041</td>\n",
              "      <td>0.50</td>\n",
              "      <td>26</td>\n",
              "      <td>4283.0</td>\n",
              "      <td>84.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>809335</th>\n",
              "      <td>01-01-2020</td>\n",
              "      <td>ORISSAMINE</td>\n",
              "      <td>1281.50</td>\n",
              "      <td>1270.00</td>\n",
              "      <td>1288.00</td>\n",
              "      <td>1259.35</td>\n",
              "      <td>1264.00</td>\n",
              "      <td>1265.60</td>\n",
              "      <td>1268.53</td>\n",
              "      <td>8230</td>\n",
              "      <td>104.40</td>\n",
              "      <td>626</td>\n",
              "      <td>4091.0</td>\n",
              "      <td>49.71</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>809336</th>\n",
              "      <td>01-01-2020</td>\n",
              "      <td>OSWALAGRO</td>\n",
              "      <td>4.95</td>\n",
              "      <td>5.15</td>\n",
              "      <td>5.40</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.20</td>\n",
              "      <td>5.30</td>\n",
              "      <td>5.18</td>\n",
              "      <td>27820</td>\n",
              "      <td>1.44</td>\n",
              "      <td>143</td>\n",
              "      <td>17849.0</td>\n",
              "      <td>64.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>809337</th>\n",
              "      <td>01-01-2020</td>\n",
              "      <td>PAISALO</td>\n",
              "      <td>433.00</td>\n",
              "      <td>429.95</td>\n",
              "      <td>438.00</td>\n",
              "      <td>427.45</td>\n",
              "      <td>429.95</td>\n",
              "      <td>428.85</td>\n",
              "      <td>432.68</td>\n",
              "      <td>37838</td>\n",
              "      <td>163.72</td>\n",
              "      <td>505</td>\n",
              "      <td>8873.0</td>\n",
              "      <td>23.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>809338</th>\n",
              "      <td>01-01-2020</td>\n",
              "      <td>PAGEIND</td>\n",
              "      <td>23393.10</td>\n",
              "      <td>23350.00</td>\n",
              "      <td>23799.00</td>\n",
              "      <td>23241.10</td>\n",
              "      <td>23600.00</td>\n",
              "      <td>23602.15</td>\n",
              "      <td>23601.26</td>\n",
              "      <td>16716</td>\n",
              "      <td>3945.19</td>\n",
              "      <td>6464</td>\n",
              "      <td>2964.0</td>\n",
              "      <td>17.73</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-633beeb2-90cd-4d86-a9b6-8dbd97ce6de3')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-633beeb2-90cd-4d86-a9b6-8dbd97ce6de3 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-633beeb2-90cd-4d86-a9b6-8dbd97ce6de3');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MLKcW2tHP1ja",
        "outputId": "f7c894b3-b1c5-4916-897e-f6794072c04a"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              " DATE1            0\n",
              "SYMBOL            0\n",
              " PREV_CLOSE       0\n",
              " OPEN_PRICE       0\n",
              " HIGH_PRICE       0\n",
              " LOW_PRICE        0\n",
              " LAST_PRICE       0\n",
              " CLOSE_PRICE      0\n",
              " AVG_PRICE        0\n",
              " TTL_TRD_QNTY     0\n",
              " TURNOVER_LACS    0\n",
              " NO_OF_TRADES     0\n",
              " DELIV_QTY        3\n",
              " DELIV_PER        3\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_data=data.drop([\" OPEN_PRICE\",\" HIGH_PRICE\",\" LOW_PRICE\",\" LAST_PRICE\",\" AVG_PRICE\",\" TTL_TRD_QNTY\",\" TURNOVER_LACS\",\" NO_OF_TRADES\",\" DELIV_QTY\",\" DELIV_PER\"], axis=1)"
      ],
      "metadata": {
        "id": "H88FHI3RP8_s"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "P88wrQ5UQPCs",
        "outputId": "7ec86f9b-97cd-4a15-9429-99f4fdd7bea9"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        DATE1      SYMBOL   PREV_CLOSE   CLOSE_PRICE\n",
              "0  11-02-2022  NETFLTGILT        22.40         22.27\n",
              "1  11-02-2022  NETFMID150       116.02        113.95\n",
              "2  11-02-2022  NETFNIF100       183.49        182.22\n",
              "3  11-02-2022  NETFDIVOPP        45.63         45.09\n",
              "4  11-02-2022  NETFGILT5Y        49.66         49.79"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-13127e71-4790-44c2-8ff6-fba45572a532\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>DATE1</th>\n",
              "      <th>SYMBOL</th>\n",
              "      <th>PREV_CLOSE</th>\n",
              "      <th>CLOSE_PRICE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>11-02-2022</td>\n",
              "      <td>NETFLTGILT</td>\n",
              "      <td>22.40</td>\n",
              "      <td>22.27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>11-02-2022</td>\n",
              "      <td>NETFMID150</td>\n",
              "      <td>116.02</td>\n",
              "      <td>113.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>11-02-2022</td>\n",
              "      <td>NETFNIF100</td>\n",
              "      <td>183.49</td>\n",
              "      <td>182.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>11-02-2022</td>\n",
              "      <td>NETFDIVOPP</td>\n",
              "      <td>45.63</td>\n",
              "      <td>45.09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>11-02-2022</td>\n",
              "      <td>NETFGILT5Y</td>\n",
              "      <td>49.66</td>\n",
              "      <td>49.79</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-13127e71-4790-44c2-8ff6-fba45572a532')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-13127e71-4790-44c2-8ff6-fba45572a532 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-13127e71-4790-44c2-8ff6-fba45572a532');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_data[\"change\"]=(((new_data[\" CLOSE_PRICE\"]-new_data[\" PREV_CLOSE\"])/new_data[\" PREV_CLOSE\"])*100)"
      ],
      "metadata": {
        "id": "Y8lHGJH_QUIW"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "YHXu6e0hQpYp",
        "outputId": "02aa82df-d82a-4a62-9f03-4f44bd2c9d3c"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        DATE1      SYMBOL   PREV_CLOSE   CLOSE_PRICE    change\n",
              "0  11-02-2022  NETFLTGILT        22.40         22.27 -0.580357\n",
              "1  11-02-2022  NETFMID150       116.02        113.95 -1.784175\n",
              "2  11-02-2022  NETFNIF100       183.49        182.22 -0.692136\n",
              "3  11-02-2022  NETFDIVOPP        45.63         45.09 -1.183432\n",
              "4  11-02-2022  NETFGILT5Y        49.66         49.79  0.261780"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-30b4ec2d-b60d-4de8-aa08-6a39253f6a65\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>DATE1</th>\n",
              "      <th>SYMBOL</th>\n",
              "      <th>PREV_CLOSE</th>\n",
              "      <th>CLOSE_PRICE</th>\n",
              "      <th>change</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>11-02-2022</td>\n",
              "      <td>NETFLTGILT</td>\n",
              "      <td>22.40</td>\n",
              "      <td>22.27</td>\n",
              "      <td>-0.580357</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>11-02-2022</td>\n",
              "      <td>NETFMID150</td>\n",
              "      <td>116.02</td>\n",
              "      <td>113.95</td>\n",
              "      <td>-1.784175</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>11-02-2022</td>\n",
              "      <td>NETFNIF100</td>\n",
              "      <td>183.49</td>\n",
              "      <td>182.22</td>\n",
              "      <td>-0.692136</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>11-02-2022</td>\n",
              "      <td>NETFDIVOPP</td>\n",
              "      <td>45.63</td>\n",
              "      <td>45.09</td>\n",
              "      <td>-1.183432</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>11-02-2022</td>\n",
              "      <td>NETFGILT5Y</td>\n",
              "      <td>49.66</td>\n",
              "      <td>49.79</td>\n",
              "      <td>0.261780</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-30b4ec2d-b60d-4de8-aa08-6a39253f6a65')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-30b4ec2d-b60d-4de8-aa08-6a39253f6a65 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-30b4ec2d-b60d-4de8-aa08-6a39253f6a65');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_data[' DATE1'] = pd.to_datetime(new_data[' DATE1'], dayfirst=True)\n",
        "new_data['month'] = pd.DatetimeIndex(new_data[' DATE1']).month\n",
        "new_data['year'] = pd.DatetimeIndex(new_data[' DATE1']).year\n",
        "new_data=new_data.sort_values(by=[\"SYMBOL\",\"month\",\"year\"])"
      ],
      "metadata": {
        "id": "qm-R2-t2Qs0L"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "A42YhqxPRGf2",
        "outputId": "0c96e609-7c63-4569-dbfb-b1e213b0dfe3"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            DATE1     SYMBOL   PREV_CLOSE   CLOSE_PRICE    change  month  year\n",
              "775890 2020-01-31  20MICRONS        34.70         34.90  0.576369      1  2020\n",
              "777744 2020-01-30  20MICRONS        35.15         34.70 -1.280228      1  2020\n",
              "779101 2020-01-29  20MICRONS        36.00         35.15 -2.361111      1  2020\n",
              "780028 2020-01-28  20MICRONS        36.15         36.00 -0.414938      1  2020\n",
              "782587 2020-01-27  20MICRONS        36.50         36.15 -0.958904      1  2020"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-681cb722-0b06-459a-8dc2-2fe3b6fa3eb7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>DATE1</th>\n",
              "      <th>SYMBOL</th>\n",
              "      <th>PREV_CLOSE</th>\n",
              "      <th>CLOSE_PRICE</th>\n",
              "      <th>change</th>\n",
              "      <th>month</th>\n",
              "      <th>year</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>775890</th>\n",
              "      <td>2020-01-31</td>\n",
              "      <td>20MICRONS</td>\n",
              "      <td>34.70</td>\n",
              "      <td>34.90</td>\n",
              "      <td>0.576369</td>\n",
              "      <td>1</td>\n",
              "      <td>2020</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>777744</th>\n",
              "      <td>2020-01-30</td>\n",
              "      <td>20MICRONS</td>\n",
              "      <td>35.15</td>\n",
              "      <td>34.70</td>\n",
              "      <td>-1.280228</td>\n",
              "      <td>1</td>\n",
              "      <td>2020</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>779101</th>\n",
              "      <td>2020-01-29</td>\n",
              "      <td>20MICRONS</td>\n",
              "      <td>36.00</td>\n",
              "      <td>35.15</td>\n",
              "      <td>-2.361111</td>\n",
              "      <td>1</td>\n",
              "      <td>2020</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>780028</th>\n",
              "      <td>2020-01-28</td>\n",
              "      <td>20MICRONS</td>\n",
              "      <td>36.15</td>\n",
              "      <td>36.00</td>\n",
              "      <td>-0.414938</td>\n",
              "      <td>1</td>\n",
              "      <td>2020</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>782587</th>\n",
              "      <td>2020-01-27</td>\n",
              "      <td>20MICRONS</td>\n",
              "      <td>36.50</td>\n",
              "      <td>36.15</td>\n",
              "      <td>-0.958904</td>\n",
              "      <td>1</td>\n",
              "      <td>2020</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-681cb722-0b06-459a-8dc2-2fe3b6fa3eb7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-681cb722-0b06-459a-8dc2-2fe3b6fa3eb7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-681cb722-0b06-459a-8dc2-2fe3b6fa3eb7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        " !pip install -U pandasql"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JEaSHhHaSAaI",
        "outputId": "355003fc-8e40-4de5-82d7-221c95017b38"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting pandasql\n",
            "  Downloading pandasql-0.7.3.tar.gz (26 kB)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from pandasql) (1.21.5)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.7/dist-packages (from pandasql) (1.3.5)\n",
            "Requirement already satisfied: sqlalchemy in /usr/local/lib/python3.7/dist-packages (from pandasql) (1.4.32)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas->pandasql) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas->pandasql) (2018.9)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas->pandasql) (1.15.0)\n",
            "Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.7/dist-packages (from sqlalchemy->pandasql) (4.11.3)\n",
            "Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.7/dist-packages (from sqlalchemy->pandasql) (1.1.2)\n",
            "Requirement already satisfied: typing-extensions>=3.6.4 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->sqlalchemy->pandasql) (3.10.0.2)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->sqlalchemy->pandasql) (3.7.0)\n",
            "Building wheels for collected packages: pandasql\n",
            "  Building wheel for pandasql (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for pandasql: filename=pandasql-0.7.3-py3-none-any.whl size=26784 sha256=3355b151724eb3269d035c8da0dd5cdc93846799fbf1f01dc6353dc301318165\n",
            "  Stored in directory: /root/.cache/pip/wheels/5c/4b/ec/41f4e116c8053c3654e2c2a47c62b4fca34cc67ef7b55deb7f\n",
            "Successfully built pandasql\n",
            "Installing collected packages: pandasql\n",
            "Successfully installed pandasql-0.7.3\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandasql import sqldf\n",
        "q=\"select SYMBOL,month,year,avg(change) as change from new_data group by symbol,year,month order by SYMBOL\"\n",
        "newdf=sqldf(q, globals())\n",
        "newdf"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "15occsJgRPiH",
        "outputId": "e781a7ec-4517-4415-c72d-b92796b0f517"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          SYMBOL  month  year    change\n",
              "0      20MICRONS      1  2020  0.000304\n",
              "1      20MICRONS      2  2020 -0.534678\n",
              "2      20MICRONS      3  2020 -0.751252\n",
              "3      20MICRONS      4  2020  1.027580\n",
              "4      20MICRONS      5  2020 -0.536147\n",
              "...          ...    ...   ...       ...\n",
              "41650  ZYDUSWELL     10  2021 -0.693857\n",
              "41651  ZYDUSWELL     11  2021 -0.266966\n",
              "41652  ZYDUSWELL     12  2021 -0.160813\n",
              "41653  ZYDUSWELL      1  2022 -0.398216\n",
              "41654  ZYDUSWELL      2  2022 -1.635702\n",
              "\n",
              "[41655 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-54ff9ad7-6948-4ee3-9fbd-94678fd7d20a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SYMBOL</th>\n",
              "      <th>month</th>\n",
              "      <th>year</th>\n",
              "      <th>change</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>20MICRONS</td>\n",
              "      <td>1</td>\n",
              "      <td>2020</td>\n",
              "      <td>0.000304</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>20MICRONS</td>\n",
              "      <td>2</td>\n",
              "      <td>2020</td>\n",
              "      <td>-0.534678</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>20MICRONS</td>\n",
              "      <td>3</td>\n",
              "      <td>2020</td>\n",
              "      <td>-0.751252</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>20MICRONS</td>\n",
              "      <td>4</td>\n",
              "      <td>2020</td>\n",
              "      <td>1.027580</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>20MICRONS</td>\n",
              "      <td>5</td>\n",
              "      <td>2020</td>\n",
              "      <td>-0.536147</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41650</th>\n",
              "      <td>ZYDUSWELL</td>\n",
              "      <td>10</td>\n",
              "      <td>2021</td>\n",
              "      <td>-0.693857</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41651</th>\n",
              "      <td>ZYDUSWELL</td>\n",
              "      <td>11</td>\n",
              "      <td>2021</td>\n",
              "      <td>-0.266966</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41652</th>\n",
              "      <td>ZYDUSWELL</td>\n",
              "      <td>12</td>\n",
              "      <td>2021</td>\n",
              "      <td>-0.160813</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41653</th>\n",
              "      <td>ZYDUSWELL</td>\n",
              "      <td>1</td>\n",
              "      <td>2022</td>\n",
              "      <td>-0.398216</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41654</th>\n",
              "      <td>ZYDUSWELL</td>\n",
              "      <td>2</td>\n",
              "      <td>2022</td>\n",
              "      <td>-1.635702</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>41655 rows × 4 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-54ff9ad7-6948-4ee3-9fbd-94678fd7d20a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-54ff9ad7-6948-4ee3-9fbd-94678fd7d20a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-54ff9ad7-6948-4ee3-9fbd-94678fd7d20a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "newdf=newdf.sort_values(by=[\"year\",\"month\",\"change\"])\n",
        "newdf"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "zNSEKwhWSdQG",
        "outputId": "726ea2c3-3f8c-4e8a-bfdf-7c706e0e5618"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           SYMBOL  month  year     change\n",
              "11947     GAYAHWS      1  2020  -9.090909\n",
              "27993   PARSVNATH      1  2020  -6.666667\n",
              "27104  OILCOUNTUB      1  2020  -5.263158\n",
              "1072     AGROPHOS      1  2020  -5.157383\n",
              "4821          BCP      1  2020  -4.761905\n",
              "...           ...    ...   ...        ...\n",
              "32857       SELMC      2  2022   4.984945\n",
              "38845   UGARSUGAR      2  2022   5.077231\n",
              "40824  WEIZMANIND      2  2022   5.387560\n",
              "24026    MHLXMIRU      2  2022   8.218743\n",
              "3775          AWL      2  2022  13.815473\n",
              "\n",
              "[41655 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0da1a666-ce41-48bf-8a97-e727e974eddd\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SYMBOL</th>\n",
              "      <th>month</th>\n",
              "      <th>year</th>\n",
              "      <th>change</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>11947</th>\n",
              "      <td>GAYAHWS</td>\n",
              "      <td>1</td>\n",
              "      <td>2020</td>\n",
              "      <td>-9.090909</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27993</th>\n",
              "      <td>PARSVNATH</td>\n",
              "      <td>1</td>\n",
              "      <td>2020</td>\n",
              "      <td>-6.666667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27104</th>\n",
              "      <td>OILCOUNTUB</td>\n",
              "      <td>1</td>\n",
              "      <td>2020</td>\n",
              "      <td>-5.263158</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1072</th>\n",
              "      <td>AGROPHOS</td>\n",
              "      <td>1</td>\n",
              "      <td>2020</td>\n",
              "      <td>-5.157383</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4821</th>\n",
              "      <td>BCP</td>\n",
              "      <td>1</td>\n",
              "      <td>2020</td>\n",
              "      <td>-4.761905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32857</th>\n",
              "      <td>SELMC</td>\n",
              "      <td>2</td>\n",
              "      <td>2022</td>\n",
              "      <td>4.984945</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38845</th>\n",
              "      <td>UGARSUGAR</td>\n",
              "      <td>2</td>\n",
              "      <td>2022</td>\n",
              "      <td>5.077231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40824</th>\n",
              "      <td>WEIZMANIND</td>\n",
              "      <td>2</td>\n",
              "      <td>2022</td>\n",
              "      <td>5.387560</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24026</th>\n",
              "      <td>MHLXMIRU</td>\n",
              "      <td>2</td>\n",
              "      <td>2022</td>\n",
              "      <td>8.218743</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3775</th>\n",
              "      <td>AWL</td>\n",
              "      <td>2</td>\n",
              "      <td>2022</td>\n",
              "      <td>13.815473</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>41655 rows × 4 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0da1a666-ce41-48bf-8a97-e727e974eddd')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0da1a666-ce41-48bf-8a97-e727e974eddd button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0da1a666-ce41-48bf-8a97-e727e974eddd');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Top performer monthwise"
      ],
      "metadata": {
        "id": "yuhlKHrRS5EM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "q1=\"select symbol,month,year,max(change) from newdf group by year,month\"\n",
        "sqldf(q1, globals())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 865
        },
        "id": "yRlZpcU3SozZ",
        "outputId": "3a581495-012c-43a1-96e7-397800ac5873"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        SYMBOL  month  year  max(change)\n",
              "0      INTEGRA      1  2020    16.666667\n",
              "1         UVSL      2  2020    10.000000\n",
              "2    KSERASERA      3  2020    13.157895\n",
              "3       PRADIP      4  2020    11.397547\n",
              "4      SEPOWER      5  2020     9.393939\n",
              "5   CASTEXTECH      6  2020    10.207071\n",
              "6      ROSSARI      7  2020    10.147587\n",
              "7         CCCL      8  2020    14.093915\n",
              "8        ROUTE      9  2020    16.056921\n",
              "9   CASTEXTECH     10  2020     8.232680\n",
              "10       GLAND     11  2020     6.218003\n",
              "11  BECTORFOOD     12  2020    18.463369\n",
              "12    KARMAENG      1  2021     7.457785\n",
              "13     RAILTEL      2  2021    29.095745\n",
              "14      NAZARA      3  2021    18.350047\n",
              "15    BLUECHIP      4  2021    18.988095\n",
              "16     VIJIFIN      5  2021     8.118022\n",
              "17   VINEETLAB      6  2021    19.958438\n",
              "18       TATVA      7  2021    55.790726\n",
              "19  KHAITANLTD      8  2021     4.817891\n",
              "20  ABMINTLLTD      9  2021     8.736550\n",
              "21     GAYAHWS     10  2021     6.350414\n",
              "22    GOCOLORS     11  2021    81.695652\n",
              "23     SUPRIYA     12  2021    16.514317\n",
              "24      HIRECT      1  2022    18.708995\n",
              "25         AWL      2  2022    13.815473"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-66918bc1-b02a-4881-b1ee-dd9eaab25390\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SYMBOL</th>\n",
              "      <th>month</th>\n",
              "      <th>year</th>\n",
              "      <th>max(change)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>INTEGRA</td>\n",
              "      <td>1</td>\n",
              "      <td>2020</td>\n",
              "      <td>16.666667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>UVSL</td>\n",
              "      <td>2</td>\n",
              "      <td>2020</td>\n",
              "      <td>10.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>KSERASERA</td>\n",
              "      <td>3</td>\n",
              "      <td>2020</td>\n",
              "      <td>13.157895</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>PRADIP</td>\n",
              "      <td>4</td>\n",
              "      <td>2020</td>\n",
              "      <td>11.397547</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>SEPOWER</td>\n",
              "      <td>5</td>\n",
              "      <td>2020</td>\n",
              "      <td>9.393939</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>CASTEXTECH</td>\n",
              "      <td>6</td>\n",
              "      <td>2020</td>\n",
              "      <td>10.207071</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>ROSSARI</td>\n",
              "      <td>7</td>\n",
              "      <td>2020</td>\n",
              "      <td>10.147587</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>CCCL</td>\n",
              "      <td>8</td>\n",
              "      <td>2020</td>\n",
              "      <td>14.093915</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>ROUTE</td>\n",
              "      <td>9</td>\n",
              "      <td>2020</td>\n",
              "      <td>16.056921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>CASTEXTECH</td>\n",
              "      <td>10</td>\n",
              "      <td>2020</td>\n",
              "      <td>8.232680</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>GLAND</td>\n",
              "      <td>11</td>\n",
              "      <td>2020</td>\n",
              "      <td>6.218003</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>BECTORFOOD</td>\n",
              "      <td>12</td>\n",
              "      <td>2020</td>\n",
              "      <td>18.463369</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>KARMAENG</td>\n",
              "      <td>1</td>\n",
              "      <td>2021</td>\n",
              "      <td>7.457785</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>RAILTEL</td>\n",
              "      <td>2</td>\n",
              "      <td>2021</td>\n",
              "      <td>29.095745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>NAZARA</td>\n",
              "      <td>3</td>\n",
              "      <td>2021</td>\n",
              "      <td>18.350047</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>BLUECHIP</td>\n",
              "      <td>4</td>\n",
              "      <td>2021</td>\n",
              "      <td>18.988095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>VIJIFIN</td>\n",
              "      <td>5</td>\n",
              "      <td>2021</td>\n",
              "      <td>8.118022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>VINEETLAB</td>\n",
              "      <td>6</td>\n",
              "      <td>2021</td>\n",
              "      <td>19.958438</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>TATVA</td>\n",
              "      <td>7</td>\n",
              "      <td>2021</td>\n",
              "      <td>55.790726</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>KHAITANLTD</td>\n",
              "      <td>8</td>\n",
              "      <td>2021</td>\n",
              "      <td>4.817891</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>ABMINTLLTD</td>\n",
              "      <td>9</td>\n",
              "      <td>2021</td>\n",
              "      <td>8.736550</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>GAYAHWS</td>\n",
              "      <td>10</td>\n",
              "      <td>2021</td>\n",
              "      <td>6.350414</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>GOCOLORS</td>\n",
              "      <td>11</td>\n",
              "      <td>2021</td>\n",
              "      <td>81.695652</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>SUPRIYA</td>\n",
              "      <td>12</td>\n",
              "      <td>2021</td>\n",
              "      <td>16.514317</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>HIRECT</td>\n",
              "      <td>1</td>\n",
              "      <td>2022</td>\n",
              "      <td>18.708995</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>AWL</td>\n",
              "      <td>2</td>\n",
              "      <td>2022</td>\n",
              "      <td>13.815473</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-66918bc1-b02a-4881-b1ee-dd9eaab25390')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-66918bc1-b02a-4881-b1ee-dd9eaab25390 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-66918bc1-b02a-4881-b1ee-dd9eaab25390');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "_J6vuL_9S4aQ"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}