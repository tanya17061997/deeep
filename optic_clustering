from sklearn.cluster import OPTICS
import matplotlib.pyplot as plt
import numpy as np

# Generate random sample data for clusters

np.random.seed(0)
n_points_per_cluster = 250

C1 = [-4, -1] + .8 * np.random.randn(n_points_per_cluster, 2)
C2 = [5, -1] + .1 * np.random.randn(n_points_per_cluster, 2)
C3 = [6, -2] + .2 * np.random.randn(n_points_per_cluster, 2)
C4 = [-7, 3] + .3 * np.random.randn(n_points_per_cluster, 2)
C5 = [6, -2] + 1.6 * np.random.randn(n_points_per_cluster, 2)
C6 = [4, 6] + 2 * np.random.randn(n_points_per_cluster, 2)
C7 = [6, 8] + 2 * np.random.randn(n_points_per_cluster, 2)
X = np.vstack((C1, C2, C3, C4, C5, C6,C7))

clust = OPTICS(min_samples=50, xi=.05, min_cluster_size=.05)

# Run the fit
clust.fit(X)

labels_050 = cluster_optics_dbscan(reachability=clust.reachability_,
                                   core_distances=clust.core_distances_,
                                   ordering=clust.ordering_, eps=0.5)
labels_200 = cluster_optics_dbscan(reachability=clust.reachability_,
                                   core_distances=clust.core_distances_,
                                   ordering=clust.ordering_, eps=2)

space = np.arange(len(X))
reachability = clust.reachability_[clust.ordering_]
labels = clust.labels_[clust.ordering_]



# OPTICS clustering plot
colors = ['k.','g.', 'r.', 'b.', 'y.', 'c.']
for klass, color in zip(range(0, 6), colors):
    Xk = X[clust.labels_ == klass]
    plt.plot(Xk[:, 0], Xk[:, 1], color, alpha=0.3)
plt.plot(X[clust.labels_ == -1, 0], X[clust.labels_ == -1, 1], 'k+', alpha=0.1)
plt.title('OPTICS Clustering')
plt.show()
